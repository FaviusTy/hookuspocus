"use strict";const OUTSIDE_RUN=Symbol("outside_run");let currentRun=OUTSIDE_RUN;const hookStateMap=new(WeakMap||Map),reset=()=>{currentRun=OUTSIDE_RUN},createHookApi=e=>{const t=hookStateMap.get(currentRun.context);void 0===t[currentRun.hookStateIndex]&&(t[currentRun.hookStateIndex]={});const n=t[currentRun.hookStateIndex],o=currentRun.onStateChange;return{onCleanUp(e){n.cleanUp=e},beforeNextRun(e){n.beforeNextRun=e},afterCurrentRun(e){n.afterCurrentRun=e},getContext:()=>currentRun.context,getState:e=>(void 0===n.state&&(n.state=e),n.state),setState(t,r=!1){let a=n.state;n.state=t,!r&&o&&o(e,a,t)}}};export const createHook=(e,t)=>(...n)=>{if(currentRun.context===OUTSIDE_RUN)throw new Error("Hook was called outside of run()!");currentRun.hookStateIndex++;const o=createHookApi(e);return t(...n,o)};function runLifeCycleCallback(e,t,n){let o=n;for(;o--;){const r=t[n-o-1];r[e]&&(r[e](),r[e]=void 0)}}export const cleanUp=e=>{const t=hookStateMap.get(e);runLifeCycleCallback("cleanUp",t,t.length)};export const dispose=e=>{const t=hookStateMap.get(e);runLifeCycleCallback("cleanUp",t,t.length),hookStateMap.delete(e)};export const run=(e,...t)=>{if("function"==typeof e&&(e={context:e,function:e}),!(e.context instanceof Object))throw new Error("Run was called without a valid object context!");(currentRun=e).hookStateIndex=-1;let n=!1;hookStateMap.has(currentRun.context)||(hookStateMap.set(currentRun.context,[]),n=!0);const o=hookStateMap.get(currentRun.context),r=o.length;runLifeCycleCallback("beforeNextRun",o,r);const a=e.function(...t);return a instanceof Promise?a.then(e=>(runLifeCycleCallback("afterCurrentRun",o,n?o.length:r),reset(),e)):(runLifeCycleCallback("afterCurrentRun",o,n?o.length:r),reset(),a)};export const useReducer=createHook("useReducer",(e,t,{getState:n,setState:o})=>{const r=n(t);return[r,t=>{o(e(r,t))}]});export const useState=createHook("useState",e=>{const[t,n]=useReducer((e,t)=>t.value,e);return[t,e=>n({type:"set_state",value:e})]});export const useEffect=createHook("useEffect",(e,...t)=>{let n;t.length>1&&(n=t[0]);const{getState:o,setState:r,onCleanUp:a,afterCurrentRun:c}=t[t.length-1];let{values:u,cleanUp:s}=o({}),l=!1;if(u!==n&&u&&u.length>0){l=!0;let e=u.length;for(;e--;)if(n[e]!==u[e]){l=!1;break}u=n}l||(s&&s(),c(()=>{s=e(),r({values:n,cleanUp:s}),a(s?()=>{s()}:void 0)}))});
//# sourceMappingURL=index.min.js.map