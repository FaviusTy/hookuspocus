{"version":3,"file":"hooked.min.mjs","sources":["../src/index.mjs"],"sourcesContent":["const OUTSIDE_RUN = Symbol(\"outside_run\");\r\nlet currentHookStateIndex;\r\nlet currentRun = OUTSIDE_RUN;\r\nconst hookStateMap = new (WeakMap ? WeakMap : Map)();\r\nconst reset = () => {\r\n  currentRun = OUTSIDE_RUN;\r\n};\r\nconst createHookApi = name => {\r\n  const hookStates = hookStateMap.get(currentRun.context);\r\n  if (hookStates[currentHookStateIndex] === undefined) {\r\n    hookStates[currentHookStateIndex] = {};\r\n  }\r\n  const hookState = hookStates[currentHookStateIndex];\r\n  const onStateChange = currentRun.onStateChange;\r\n  return {\r\n    onCleanUp(callback) {\r\n      hookState.cleanUp = callback;\r\n    },\r\n    beforeNextRun(callback) {\r\n      hookState.beforeNextRun = callback;\r\n    },\r\n    afterCurrentRun(callback) {\r\n      hookState.afterCurrentRun = callback;\r\n    },\r\n    getApi() {\r\n      return currentRun.api;\r\n    },\r\n    getContext() {\r\n      return currentRun.context;\r\n    },\r\n    getState(initialState) {\r\n      if (hookState.state === undefined) hookState.state = initialState;\r\n      return hookState.state;\r\n    },\r\n    setState(value, silent = false) {\r\n      let oldValue = hookState.state;\r\n      hookState.state = value;\r\n      if (!silent && onStateChange) onStateChange(name, oldValue, value);\r\n    }\r\n  };\r\n};\r\nexport const createHook = (name, hook) => {\r\n  return (...args) => {\r\n    if (currentRun.context === OUTSIDE_RUN)\r\n      throw new Error(\"Hook was called outside of run()!\");\r\n    currentHookStateIndex++;\r\n    const hookApi = createHookApi(name);\r\n    return hook(...args, hookApi);\r\n  };\r\n};\r\nfunction runLifeCycleCallback(name, hookStates, length) {\r\n  let index = length;\r\n  while (index--) {\r\n    const hookState = hookStates[length - index - 1];\r\n    if (hookState[name]) {\r\n      hookState[name]();\r\n      hookState[name] = undefined;\r\n    }\r\n  }\r\n}\r\nexport const run = (\r\n  callback,\r\n  { context, api, onStateChange = () => {} } = {}\r\n) => {\r\n  if (!context) context = callback;\r\n  if (!(context instanceof Object))\r\n    throw new Error(\"Run was called without a valid object context!\");\r\n  if (currentRun !== OUTSIDE_RUN)\r\n    throw new Error(\"Run was called before the end of the previous run!\");\r\n  currentRun = {\r\n    context,\r\n    api,\r\n    onStateChange\r\n  };\r\n  currentHookStateIndex = -1;\r\n  let init = false;\r\n  if (!hookStateMap.has(context)) {\r\n    hookStateMap.set(context, []);\r\n    init = true;\r\n  }\r\n  const hookStates = hookStateMap.get(currentRun.context);\r\n  const length = hookStates.length;\r\n  runLifeCycleCallback(\"beforeNextRun\", hookStates, length);\r\n  const result = callback();\r\n  if (result instanceof Promise) {\r\n    return result.then(value => {\r\n      runLifeCycleCallback(\r\n        \"afterCurrentRun\",\r\n        hookStates,\r\n        init ? hookStates.length : length\r\n      );\r\n      reset();\r\n      return value;\r\n    });\r\n  } else {\r\n    runLifeCycleCallback(\r\n      \"afterCurrentRun\",\r\n      hookStates,\r\n      init ? hookStates.length : length\r\n    );\r\n    reset();\r\n    return result;\r\n  }\r\n};\r\nexport const useReducer = createHook(\r\n  \"useReducer\",\r\n  (reducer, initialState, { getState, setState }) => {\r\n    const state = getState(initialState);\r\n    return [\r\n      state,\r\n      action => {\r\n        setState(reducer(state, action));\r\n      }\r\n    ];\r\n  }\r\n);\r\nexport const useState = createHook(\"useState\", initialState => {\r\n  const [state, dispatch] = useReducer((_, action) => {\r\n    return action.value;\r\n  }, initialState);\r\n\r\n  return [\r\n    state,\r\n    newState =>\r\n      dispatch({\r\n        type: \"set_state\",\r\n        value: newState\r\n      })\r\n  ];\r\n});\r\n\r\nexport const useEffect = createHook(\"useEffect\", (effect, ...rest) => {\r\n  let valuesIn;\r\n  if (rest.length > 1) {\r\n    valuesIn = rest[0];\r\n  }\r\n  const { getState, setState, onCleanUp, afterCurrentRun } = rest[\r\n    rest.length - 1\r\n  ];\r\n  let { values, cleanUp } = getState({});\r\n  let nothingChanged = false;\r\n  if (values !== valuesIn && values && values.length > 0) {\r\n    nothingChanged = true;\r\n    let index = values.length;\r\n\r\n    while (index--) {\r\n      if (valuesIn[index] !== values[index]) {\r\n        nothingChanged = false;\r\n        break;\r\n      }\r\n    }\r\n    values = valuesIn;\r\n  }\r\n  if (!nothingChanged) {\r\n    if (cleanUp) cleanUp();\r\n    afterCurrentRun(() => {\r\n      cleanUp = effect();\r\n      setState({ values: valuesIn, cleanUp });\r\n      if (cleanUp) {\r\n        onCleanUp(() => {\r\n          cleanUp();\r\n        });\r\n      } else {\r\n        onCleanUp(undefined);\r\n      }\r\n    });\r\n  }\r\n});\r\n"],"names":["OUTSIDE_RUN","Symbol","currentHookStateIndex","currentRun","hookStateMap","WeakMap","Map","reset","createHook","name","hook","args","context","Error","hookApi","hookStates","get","undefined","hookState","onStateChange","[object Object]","callback","cleanUp","beforeNextRun","afterCurrentRun","getApi","api","getContext","getState","initialState","state","value","silent","oldValue","createHookApi","runLifeCycleCallback","length","index","run","Object","init","has","set","result","Promise","then","useReducer","reducer","setState","action","useState","dispatch","_","newState","type","useEffect","effect","rest","valuesIn","onCleanUp","values","nothingChanged"],"mappings":"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"}