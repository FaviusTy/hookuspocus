const t=Symbol("outside_run");let e,n=t;const o=new(WeakMap||Map),a=()=>{n=t},r=(a,r)=>(...s)=>{if(n.context===t)throw new Error("Hook was called outside of run()!");e++;const u=(t=>{const a=o.get(n.context);void 0===a[e]&&(a[e]={});const r=a[e],s=n.onStateChange;return{onCleanUp(t){r.cleanUp=t},beforeNextRun(t){r.beforeNextRun=t},afterCurrentRun(t){r.afterCurrentRun=t},getApi:()=>n.api,getContext:()=>n.context,getState:t=>(void 0===r.state&&(r.state=t),r.state),setState(e,n=!1){let o=r.state;r.state=e,!n&&s&&s(t,o,e)}}})(a);return r(...s,u)};function s(t,e,n){let o=n;for(;o--;){const a=e[n-o-1];a[t]&&(a[t](),a[t]=void 0)}}const u=(r,{context:u,api:c,onStateChange:l=(()=>{})}={})=>{if(u||(u=r),!(u instanceof Object))throw new Error("Run was called without a valid object context!");if(n!==t)throw new Error("Run was called before the end of the previous run!");n={context:u,api:c,onStateChange:l},e=-1;let f=!1;o.has(u)||(o.set(u,[]),f=!0);const i=o.get(n.context),h=i.length;s("beforeNextRun",i,h);const g=r();return g instanceof Promise?g.then(t=>(s("afterCurrentRun",i,f?i.length:h),a(),t)):(s("afterCurrentRun",i,f?i.length:h),a(),g)},c=r("useReducer",(t,e,{getState:n,setState:o})=>{const a=n(e);return[a,e=>{o(t(a,e))}]}),l=r("useState",t=>{const[e,n]=c((t,e)=>e.value,t);return[e,t=>n({type:"set_state",value:t})]}),f=r("useEffect",(t,...e)=>{let n;e.length>1&&(n=e[0]);const{getState:o,setState:a,onCleanUp:r,afterCurrentRun:s}=e[e.length-1];let{values:u,cleanUp:c}=o({}),l=!1;if(u!==n&&u&&u.length>0){l=!0;let t=u.length;for(;t--;)if(n[t]!==u[t]){l=!1;break}u=n}l||(c&&c(),s(()=>{c=t(),a({values:n,cleanUp:c}),r(c?()=>{c()}:void 0)}))});export{r as createHook,u as run,c as useReducer,l as useState,f as useEffect};
//# sourceMappingURL=hooked.min.mjs.map
