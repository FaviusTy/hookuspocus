{"version":3,"file":"hooked.min.js","sources":["../src/index.mjs"],"sourcesContent":["\"use strict\";\r\nconst OUTSIDE_RUN = Symbol(\"outside_run\");\r\nlet currentRun = OUTSIDE_RUN;\r\nconst hookStateMap = new (WeakMap ? WeakMap : Map)();\r\nconst reset = () => {\r\n  currentRun = OUTSIDE_RUN;\r\n};\r\nconst createHookApi = name => {\r\n  const hookStates = hookStateMap.get(currentRun.context);\r\n  if (hookStates[currentRun.hookStateIndex] === undefined) {\r\n    hookStates[currentRun.hookStateIndex] = {};\r\n  }\r\n  const hookState = hookStates[currentRun.hookStateIndex];\r\n  const onStateChange = currentRun.onStateChange;\r\n  return {\r\n    onCleanUp(callback) {\r\n      hookState.cleanUp = callback;\r\n    },\r\n    beforeNextRun(callback) {\r\n      hookState.beforeNextRun = callback;\r\n    },\r\n    afterCurrentRun(callback) {\r\n      hookState.afterCurrentRun = callback;\r\n    },\r\n    getContext() {\r\n      return currentRun.context;\r\n    },\r\n    getState(initialState) {\r\n      if (hookState.state === undefined) hookState.state = initialState;\r\n      return hookState.state;\r\n    },\r\n    setState(value, silent = false) {\r\n      let oldValue = hookState.state;\r\n      hookState.state = value;\r\n      if (!silent && onStateChange) onStateChange(name, oldValue, value);\r\n    }\r\n  };\r\n};\r\nexport const createHook = (name, hook) => {\r\n  return (...args) => {\r\n    if (currentRun.context === OUTSIDE_RUN)\r\n      throw new Error(\"Hook was called outside of run()!\");\r\n    currentRun.hookStateIndex++;\r\n    const hookApi = createHookApi(name);\r\n    return hook(...args, hookApi);\r\n  };\r\n};\r\nfunction runLifeCycleCallback(name, hookStates, length) {\r\n  let index = length;\r\n  while (index--) {\r\n    const hookState = hookStates[length - index - 1];\r\n    if (hookState[name]) {\r\n      hookState[name]();\r\n      hookState[name] = undefined;\r\n    }\r\n  }\r\n}\r\nexport const cleanUp = context => {\r\n  const hookStates = hookStateMap.get(context);\r\n  runLifeCycleCallback(\"cleanUp\", hookStates, hookStates.length);\r\n};\r\nexport const dispose = context => {\r\n  const hookStates = hookStateMap.get(context);\r\n  runLifeCycleCallback(\"cleanUp\", hookStates, hookStates.length);\r\n  hookStateMap.delete(context);\r\n};\r\nexport const run = (runData, ...args) => {\r\n  if (typeof runData === \"function\") {\r\n    runData = {\r\n      context: runData,\r\n      function: runData\r\n    };\r\n  }\r\n  if (!(runData.context instanceof Object))\r\n    throw new Error(\"Run was called without a valid object context!\");\r\n  currentRun = runData;\r\n  currentRun.hookStateIndex = -1;\r\n  let init = false;\r\n  if (!hookStateMap.has(currentRun.context)) {\r\n    hookStateMap.set(currentRun.context, []);\r\n    init = true;\r\n  }\r\n  const hookStates = hookStateMap.get(currentRun.context);\r\n  const length = hookStates.length;\r\n  runLifeCycleCallback(\"beforeNextRun\", hookStates, length);\r\n  const result = runData.function(...args);\r\n  if (result instanceof Promise) {\r\n    return result.then(value => {\r\n      runLifeCycleCallback(\r\n        \"afterCurrentRun\",\r\n        hookStates,\r\n        init ? hookStates.length : length\r\n      );\r\n      reset();\r\n      return value;\r\n    });\r\n  } else {\r\n    runLifeCycleCallback(\r\n      \"afterCurrentRun\",\r\n      hookStates,\r\n      init ? hookStates.length : length\r\n    );\r\n    reset();\r\n    return result;\r\n  }\r\n};\r\nexport const useReducer = createHook(\r\n  \"useReducer\",\r\n  (reducer, initialState, { getState, setState }) => {\r\n    const state = getState(initialState);\r\n    return [\r\n      state,\r\n      action => {\r\n        setState(reducer(state, action));\r\n      }\r\n    ];\r\n  }\r\n);\r\nexport const useState = createHook(\"useState\", initialState => {\r\n  const [state, dispatch] = useReducer((_, action) => {\r\n    return action.value;\r\n  }, initialState);\r\n\r\n  return [\r\n    state,\r\n    newState =>\r\n      dispatch({\r\n        type: \"set_state\",\r\n        value: newState\r\n      })\r\n  ];\r\n});\r\n\r\nexport const useEffect = createHook(\"useEffect\", (effect, ...rest) => {\r\n  let valuesIn;\r\n  if (rest.length > 1) {\r\n    valuesIn = rest[0];\r\n  }\r\n  const { getState, setState, onCleanUp, afterCurrentRun } = rest[\r\n    rest.length - 1\r\n  ];\r\n  let { values, cleanUp } = getState({});\r\n  let nothingChanged = false;\r\n  if (values !== valuesIn && values && values.length > 0) {\r\n    nothingChanged = true;\r\n    let index = values.length;\r\n\r\n    while (index--) {\r\n      if (valuesIn[index] !== values[index]) {\r\n        nothingChanged = false;\r\n        break;\r\n      }\r\n    }\r\n    values = valuesIn;\r\n  }\r\n  if (!nothingChanged) {\r\n    if (cleanUp) cleanUp();\r\n    afterCurrentRun(() => {\r\n      cleanUp = effect();\r\n      setState({ values: valuesIn, cleanUp });\r\n      if (cleanUp) {\r\n        onCleanUp(() => {\r\n          cleanUp();\r\n        });\r\n      } else {\r\n        onCleanUp(undefined);\r\n      }\r\n    });\r\n  }\r\n});\r\n"],"names":["OUTSIDE_RUN","Symbol","currentRun","hookStateMap","WeakMap","Map","reset","createHook","name","hook","args","context","Error","hookStateIndex","hookApi","hookStates","get","undefined","hookState","onStateChange","[object Object]","callback","cleanUp","beforeNextRun","afterCurrentRun","getContext","getState","initialState","state","value","silent","oldValue","createHookApi","runLifeCycleCallback","length","index","useReducer","reducer","setState","action","useState","dispatch","_","newState","type","useEffect","effect","rest","valuesIn","onCleanUp","values","nothingChanged","delete","runData","function","Object","init","has","set","result","Promise","then"],"mappings":"oMACA,MAAMA,EAAcC,OAAO,eAC3B,IAAIC,EAAaF,EACjB,MAAMG,EAAe,IAAKC,SAAoBC,KACxCC,EAAQ,KACZJ,EAAaF,GAiCFO,EAAa,CAACC,EAAMC,IACxB,IAAIC,KACT,GAAIR,EAAWS,UAAYX,EACzB,MAAM,IAAIY,MAAM,qCAClBV,EAAWW,iBACX,MAAMC,EApCYN,CAAAA,IACpB,MAAMO,EAAaZ,EAAaa,IAAId,EAAWS,cACDM,IAA1CF,EAAWb,EAAWW,kBACxBE,EAAWb,EAAWW,gBAAkB,IAE1C,MAAMK,EAAYH,EAAWb,EAAWW,gBAClCM,EAAgBjB,EAAWiB,cACjC,MAAO,CACLC,UAAUC,GACRH,EAAUI,QAAUD,GAEtBD,cAAcC,GACZH,EAAUK,cAAgBF,GAE5BD,gBAAgBC,GACdH,EAAUM,gBAAkBH,GAE9BI,WAAU,IACDvB,EAAWS,QAEpBe,SAASC,SACiBV,IAApBC,EAAUU,QAAqBV,EAAUU,MAAQD,GAC9CT,EAAUU,OAEnBR,SAASS,EAAOC,GAAS,GACvB,IAAIC,EAAWb,EAAUU,MACzBV,EAAUU,MAAQC,GACbC,GAAUX,GAAeA,EAAcX,EAAMuB,EAAUF,MAS9CG,CAAcxB,GAC9B,OAAOC,KAAQC,EAAMI,IAGzB,SAASmB,EAAqBzB,EAAMO,EAAYmB,GAC9C,IAAIC,EAAQD,EACZ,KAAOC,KAAS,CACd,MAAMjB,EAAYH,EAAWmB,EAASC,EAAQ,GAC1CjB,EAAUV,KACZU,EAAUV,KACVU,EAAUV,QAAQS,UAqDXmB,EAAa7B,EACxB,aACA,CAAC8B,EAASV,GAAgBD,SAAAA,EAAUY,SAAAA,MAClC,MAAMV,EAAQF,EAASC,GACvB,MAAO,CACLC,EACAW,IACED,EAASD,EAAQT,EAAOW,QAKnBC,EAAWjC,EAAW,WAAYoB,IAC7C,MAAOC,EAAOa,GAAYL,EAAW,CAACM,EAAGH,IAChCA,EAAOV,MACbF,GAEH,MAAO,CACLC,EACAe,GACEF,EAAS,CACPG,KAAM,YACNf,MAAOc,OAKFE,EAAYtC,EAAW,YAAa,CAACuC,KAAWC,KAC3D,IAAIC,EACAD,EAAKb,OAAS,IAChBc,EAAWD,EAAK,IAElB,MAAMrB,SAAEA,EAAQY,SAAEA,EAAQW,UAAEA,EAASzB,gBAAEA,GAAoBuB,EACzDA,EAAKb,OAAS,GAEhB,IAAIgB,OAAEA,EAAM5B,QAAEA,GAAYI,EAAS,IAC/ByB,GAAiB,EACrB,GAAID,IAAWF,GAAYE,GAAUA,EAAOhB,OAAS,EAAG,CACtDiB,GAAiB,EACjB,IAAIhB,EAAQe,EAAOhB,OAEnB,KAAOC,KACL,GAAIa,EAASb,KAAWe,EAAOf,GAAQ,CACrCgB,GAAiB,EACjB,MAGJD,EAASF,EAENG,IACC7B,GAASA,IACbE,EAAgB,KACdF,EAAUwB,IACVR,EAAS,CAAEY,OAAQF,EAAU1B,QAAAA,IAE3B2B,EADE3B,EACQ,KACRA,UAGQL,iCA5GKN,CAAAA,IACrB,MAAMI,EAAaZ,EAAaa,IAAIL,GACpCsB,EAAqB,UAAWlB,EAAYA,EAAWmB,oBAElCvB,CAAAA,IACrB,MAAMI,EAAaZ,EAAaa,IAAIL,GACpCsB,EAAqB,UAAWlB,EAAYA,EAAWmB,QACvD/B,EAAaiD,OAAOzC,WAEH,EAAC0C,KAAY3C,KAO9B,GANuB,mBAAZ2C,IACTA,EAAU,CACR1C,QAAS0C,EACTC,SAAUD,MAGRA,EAAQ1C,mBAAmB4C,QAC/B,MAAM,IAAI3C,MAAM,mDAClBV,EAAamD,GACFxC,gBAAkB,EAC7B,IAAI2C,GAAO,EACNrD,EAAasD,IAAIvD,EAAWS,WAC/BR,EAAauD,IAAIxD,EAAWS,QAAS,IACrC6C,GAAO,GAET,MAAMzC,EAAaZ,EAAaa,IAAId,EAAWS,SACzCuB,EAASnB,EAAWmB,OAC1BD,EAAqB,gBAAiBlB,EAAYmB,GAClD,MAAMyB,EAASN,EAAQC,YAAY5C,GACnC,OAAIiD,aAAkBC,QACbD,EAAOE,KAAKhC,IACjBI,EACE,kBACAlB,EACAyC,EAAOzC,EAAWmB,OAASA,GAE7B5B,IACOuB,KAGTI,EACE,kBACAlB,EACAyC,EAAOzC,EAAWmB,OAASA,GAE7B5B,IACOqD"}